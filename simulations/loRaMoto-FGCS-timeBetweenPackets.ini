[General]
network = LoRaMotoMesh
rng-class = "cMersenneTwister"
seed-set = ${repetition}
simtime-resolution = -11

# The FGCS LoRaMoto with 10 GW and different time between packets
[Config FGCS-LoRaMoto-10GW-timebetweenPackets]
repeat = 20
# network features
**.numberOfGateways = 10
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = false
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

**.numberOfNodes = 7500
**.numberOfPacketsToSend = 3
**.payloadSize = 12B
**.numberOfPacketsToForward = 3
**.packetForwarding = 2
**.numberOfHops = 1
**.requestACKfromApp = true
**.stopOnACK = true
**.increaseSF = false
**.packetsPerSF = 1
sim-time-limit = 2h
warmup-period = 1h

**.timeToFirstPacket = 3600s+uniform(0s, 120s)
**.timeToNextPacket = ${timeToNextPacket= uniform(0s, 180s), uniform(0s, 210s), uniform(0s, 240s), uniform(0s, 270s), uniform(0s, 300s), uniform(0s, 330s), uniform(0s, 360s), uniform(0s, 390s), uniform(0s, 420s), uniform(0s, 450s), uniform(0s, 480s), uniform(0s, 510s), uniform(0s, 540s), uniform(0s, 570s), uniform(0s, 600s)}
**.alohaChannelModel = false

#nodes features
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# random deployment of nodes in a rectangular area
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)

#gateway features
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false

**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false

# The FGCS LoRaMoto with 10 GW and different time between packets
[Config FGCS-LoRaMoto-10GW-timebetweenPackets-test]
repeat = 20
# network features
**.numberOfGateways = 10
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = false
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

**.numberOfNodes = 750
**.numberOfPacketsToSend = 3
**.payloadSize = 12B
**.numberOfPacketsToForward = 3
**.packetForwarding = 2
**.numberOfHops = 1
**.requestACKfromApp = true
**.stopOnACK = true
**.increaseSF = false
**.packetsPerSF = 1
sim-time-limit = 2h
warmup-period = 1h

**.timeToFirstPacket = 3600s+uniform(0s, 120s)
**.timeToNextPacket = ${timeToNextPacket= uniform(0s, 180s), uniform(0s, 210s), uniform(0s, 240s), uniform(0s, 270s), uniform(0s, 300s), uniform(0s, 330s), uniform(0s, 360s), uniform(0s, 390s), uniform(0s, 420s), uniform(0s, 450s), uniform(0s, 480s), uniform(0s, 510s), uniform(0s, 540s), uniform(0s, 570s), uniform(0s, 600s)}
**.alohaChannelModel = false

#nodes features
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# random deployment of nodes in a rectangular area
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)

#gateway features
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false

**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false


# The FGCS LoRaMoto with 75 GW and different time between packets
[Config FGCS-LoRaMoto-75GW-timebetweenPackets]
repeat = 20
# network features
**.numberOfGateways = 75
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = false
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

**.numberOfNodes = 7500
**.numberOfPacketsToSend = 3
**.payloadSize = 12B
**.numberOfPacketsToForward = 3
**.packetForwarding = 2
**.numberOfHops = 1
**.requestACKfromApp = true
**.stopOnACK = true
**.increaseSF = false
**.packetsPerSF = 1
sim-time-limit = 2h
warmup-period = 1h

**.timeToFirstPacket = 3600s+uniform(0s, 120s)
**.timeToNextPacket = ${timeToNextPacket= uniform(0s, 180s), uniform(0s, 210s), uniform(0s, 240s), uniform(0s, 270s), uniform(0s, 300s), uniform(0s, 330s), uniform(0s, 360s), uniform(0s, 390s), uniform(0s, 420s), uniform(0s, 450s), uniform(0s, 480s), uniform(0s, 510s), uniform(0s, 540s), uniform(0s, 570s), uniform(0s, 600s)}
**.alohaChannelModel = false

#nodes features
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# random deployment of nodes in a rectangular area
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)

#gateway features
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false

**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false

# The FGCS LoRaMoto with 75 GW and different time between packets
[Config FGCS-LoRaMoto-75GW-timebetweenPackets-test]
repeat = 20
# network features
**.numberOfGateways = 75
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = false
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

**.numberOfNodes = 750
**.numberOfPacketsToSend = 3
**.payloadSize = 12B
**.numberOfPacketsToForward = 3
**.packetForwarding = 2
**.numberOfHops = 1
**.requestACKfromApp = true
**.stopOnACK = true
**.increaseSF = false
**.packetsPerSF = 1
sim-time-limit = 2h
warmup-period = 1h

**.timeToFirstPacket = 3600s+uniform(0s, 120s)
**.timeToNextPacket = ${timeToNextPacket= uniform(0s, 180s), uniform(0s, 210s), uniform(0s, 240s), uniform(0s, 270s), uniform(0s, 300s), uniform(0s, 330s), uniform(0s, 360s), uniform(0s, 390s), uniform(0s, 420s), uniform(0s, 450s), uniform(0s, 480s), uniform(0s, 510s), uniform(0s, 540s), uniform(0s, 570s), uniform(0s, 600s)}
**.alohaChannelModel = false

#nodes features
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# random deployment of nodes in a rectangular area
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)

#gateway features
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false

**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false


# The FGCS baseline with 10 GW and different time between packets
[Config FGCS-baseline-10GW-timebetweenPackets]
repeat = 20
# network features
**.numberOfGateways = 10
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = false
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

**.numberOfNodes = 7500
**.numberOfPacketsToSend = 3
**.payloadSize = 12B
**.numberOfPacketsToForward = 0
**.packetForwarding = 0
**.numberOfHops = 0
**.requestACKfromApp = false
**.stopOnACK = false
**.increaseSF = false
**.packetsPerSF = 1
sim-time-limit = 2h
warmup-period = 1h

**.timeToFirstPacket = 3600s+uniform(0s, 120s)
**.timeToNextPacket = ${timeToNextPacket= uniform(0s, 180s), uniform(0s, 210s), uniform(0s, 240s), uniform(0s, 270s), uniform(0s, 300s), uniform(0s, 330s), uniform(0s, 360s), uniform(0s, 390s), uniform(0s, 420s), uniform(0s, 450s), uniform(0s, 480s), uniform(0s, 510s), uniform(0s, 540s), uniform(0s, 570s), uniform(0s, 600s)}
**.alohaChannelModel = false

#nodes features
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# random deployment of nodes in a rectangular area
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)

#gateway features
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false

**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false

# The FGCS baseline with 10 GW and different time between packets
[Config FGCS-baseline-10GW-timebetweenPackets-test]
repeat = 20
# network features
**.numberOfGateways = 10
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = false
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

**.numberOfNodes = 750
**.numberOfPacketsToSend = 3
**.payloadSize = 12B
**.numberOfPacketsToForward = 0
**.packetForwarding = 0
**.numberOfHops = 0
**.requestACKfromApp = false
**.stopOnACK = false
**.increaseSF = false
**.packetsPerSF = 1
sim-time-limit = 2h
warmup-period = 1h

**.timeToFirstPacket = 3600s+uniform(0s, 120s)
**.timeToNextPacket = ${timeToNextPacket= uniform(0s, 180s), uniform(0s, 210s), uniform(0s, 240s), uniform(0s, 270s), uniform(0s, 300s), uniform(0s, 330s), uniform(0s, 360s), uniform(0s, 390s), uniform(0s, 420s), uniform(0s, 450s), uniform(0s, 480s), uniform(0s, 510s), uniform(0s, 540s), uniform(0s, 570s), uniform(0s, 600s)}
**.alohaChannelModel = false

#nodes features
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# random deployment of nodes in a rectangular area
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)

#gateway features
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false

**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false


# The FGCS baseline with 75 GW and different time between packets
[Config FGCS-baseline-75GW-timebetweenPackets]
repeat = 20
# network features
**.numberOfGateways = 75
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = false
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

**.numberOfNodes = 7500
**.numberOfPacketsToSend = 3
**.payloadSize = 12B
**.numberOfPacketsToForward = 0
**.packetForwarding = 0
**.numberOfHops = 0
**.requestACKfromApp = false
**.stopOnACK = false
**.increaseSF = false
**.packetsPerSF = 1
sim-time-limit = 2h
warmup-period = 1h

**.timeToFirstPacket = 3600s+uniform(0s, 120s)
**.timeToNextPacket = ${timeToNextPacket= uniform(0s, 180s), uniform(0s, 210s), uniform(0s, 240s), uniform(0s, 270s), uniform(0s, 300s), uniform(0s, 330s), uniform(0s, 360s), uniform(0s, 390s), uniform(0s, 420s), uniform(0s, 450s), uniform(0s, 480s), uniform(0s, 510s), uniform(0s, 540s), uniform(0s, 570s), uniform(0s, 600s)}
**.alohaChannelModel = false

#nodes features
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# random deployment of nodes in a rectangular area
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)

#gateway features
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false

**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false

# The FGCS baseline with 75 GW and different time between packets
[Config FGCS-baseline-75GW-timebetweenPackets-test]
repeat = 20
# network features
**.numberOfGateways = 75
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = false
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

**.numberOfNodes = 750
**.numberOfPacketsToSend = 3
**.payloadSize = 12B
**.numberOfPacketsToForward = 0
**.packetForwarding = 0
**.numberOfHops = 0
**.requestACKfromApp = false
**.stopOnACK = false
**.increaseSF = false
**.packetsPerSF = 1
sim-time-limit = 2h
warmup-period = 1h

**.timeToFirstPacket = 3600s+uniform(0s, 120s)
**.timeToNextPacket = ${timeToNextPacket= uniform(0s, 180s), uniform(0s, 210s), uniform(0s, 240s), uniform(0s, 270s), uniform(0s, 300s), uniform(0s, 330s), uniform(0s, 360s), uniform(0s, 390s), uniform(0s, 420s), uniform(0s, 450s), uniform(0s, 480s), uniform(0s, 510s), uniform(0s, 540s), uniform(0s, 570s), uniform(0s, 600s)}
**.alohaChannelModel = false

#nodes features
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# random deployment of nodes in a rectangular area
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)

#gateway features
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false

**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false

