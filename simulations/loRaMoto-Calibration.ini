[General]
network = LoRaMotoMesh
rng-class = "cMersenneTwister"
seed-set = ${repetition}
simtime-resolution = -11
**.cmdenv-log-level = off
**.**.cmdenv-log-level = off

[Config UCAmI2019-Calibration-playground]
# Experiment repetitions
#repeat = 10

# Gateways
**.numberOfGateways = 10
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

# App
**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = true
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

# Nodes
**.numberOfNodes = 1
**.numberOfCalibrationPacketsToSend = 0 #0 means infinite number of packets until calibration period ends
**.numberOfDataPacketsToSend = 3 #0 means infinite number of packets until simulation period ends
**.numberOfForwardedPacketsToSend = ${numberOfForwardedPacketsToSend = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
**.packetForwarding = 2
**.numberOfHops = 1
**.requestACKfromApp = true
**.requestADRfromApp = true
**.stopOnACK = true
**.stopOnADR = true
**.increaseSF = true
**.packetsPerSF = 2

# Nodes settings
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
#**.loRaNodes[*].**initialLoRaSF = ${initialLoRaSF = 7, 8, 9, 10, 11, 12, intuniform(7,8), intuniform(7,9), intuniform(7,10), intuniform(7,11), intuniform(7,12), intuniform(8,9), intuniform(8,10), intuniform(8,11), intuniform(8,12), intuniform(9,10), intuniform(9,11), intuniform(9,12), intuniform(10,11), intuniform(10,12), intuniform(11,12) } #21
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# Timing
**.calibrationPeriod = 24h
**.timeToFirstCalibrationPacket = uniform(0s, 3600s)
**.timeToNextCalibrationPacket = uniform(0s, 3600s)
**.timeToFirstDataPacket = uniform(0s, 120s)
**.timeToNextDataPacket = uniform(0s, 300s)
sim-time-limit = 26h
warmup-period = 1h

# Deployment
**.loRaNodes[*].**.initialX = uniform(0m, 140m)
**.loRaNodes[*].**.initialY = uniform(0m, 250m)
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 140m)
**.loRaGW[*].**.initialY = uniform(0m, 250m)

# Energy
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

# General constraints
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

# Other settings
LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false
**.alohaChannelModel = false
**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false





[Config UCAmI75-NumberPacketsForward-ACK-FWD2-ADR-SameSF-test]
# Experiment repetitions
repeat = 10

# Gateways
**.numberOfGateways = 75
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

# App
**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = true
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

# Nodes
**.numberOfNodes = 750
**.numberOfCalibrationPacketsToSend = 0 #0 means infinite number of packets until calibration period ends
**.numberOfDataPacketsToSend = 3 #0 means infinite number of packets until simulation period ends
**.numberOfForwardedPacketsToSend = ${numberOfForwardedPacketsToSend = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
**.packetForwarding = 2
**.numberOfHops = 1
**.requestACKfromApp = true
**.requestADRfromApp = true
**.stopOnACK = false
**.stopOnADR = true
**.increaseSF = true
**.packetsPerSF = 2

# Nodes settings
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
#**.loRaNodes[*].**initialLoRaSF = ${initialLoRaSF = 7, 8, 9, 10, 11, 12, intuniform(7,8), intuniform(7,9), intuniform(7,10), intuniform(7,11), intuniform(7,12), intuniform(8,9), intuniform(8,10), intuniform(8,11), intuniform(8,12), intuniform(9,10), intuniform(9,11), intuniform(9,12), intuniform(10,11), intuniform(10,12), intuniform(11,12) } #21
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# Timing
**.calibrationPeriod = 24h
**.timeToFirstCalibrationPacket = uniform(0s, 3600s)
**.timeToNextCalibrationPacket = uniform(0s, 3600s)
**.timeToFirstDataPacket = uniform(0s, 120s)
**.timeToNextDataPacket = uniform(0s, 300s)
sim-time-limit = 26h
warmup-period = 1h

# Deployment
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

# Energy
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

# General constraints
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

# Other settings
LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false
**.alohaChannelModel = false
**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false


[Config UCAmI75-NumberPacketsForward-ACK-FWD2-ADR-SameSF]
# Experiment repetitions
repeat = 10

# Gateways
**.numberOfGateways = 75
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

# App
**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = true
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

# Nodes
**.numberOfNodes = 7500
**.numberOfCalibrationPacketsToSend = 0 #0 means infinite number of packets until calibration period ends
**.numberOfDataPacketsToSend = 3 #0 means infinite number of packets until simulation period ends
**.numberOfForwardedPacketsToSend = ${numberOfForwardedPacketsToSend = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
**.packetForwarding = 2
**.numberOfHops = 1
**.requestACKfromApp = true
**.requestADRfromApp = true
**.stopOnACK = false
**.stopOnADR = true
**.increaseSF = true
**.packetsPerSF = 2

# Nodes settings
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
#**.loRaNodes[*].**initialLoRaSF = ${initialLoRaSF = 7, 8, 9, 10, 11, 12, intuniform(7,8), intuniform(7,9), intuniform(7,10), intuniform(7,11), intuniform(7,12), intuniform(8,9), intuniform(8,10), intuniform(8,11), intuniform(8,12), intuniform(9,10), intuniform(9,11), intuniform(9,12), intuniform(10,11), intuniform(10,12), intuniform(11,12) } #21
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# Timing
**.calibrationPeriod = 24h
**.timeToFirstCalibrationPacket = uniform(0s, 3600s)
**.timeToNextCalibrationPacket = uniform(0s, 3600s)
**.timeToFirstDataPacket = uniform(0s, 120s)
**.timeToNextDataPacket = uniform(0s, 300s)
sim-time-limit = 26h
warmup-period = 1h

# Deployment
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

# Energy
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

# General constraints
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

# Other settings
LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false
**.alohaChannelModel = false
**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false



[Config UCAmI75-NumberPacketsForward-ACK-STOP-FWD2-ADR-SameSF-test]
# Experiment repetitions
repeat = 10

# Gateways
**.numberOfGateways = 75
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

# App
**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = true
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

# Nodes
**.numberOfNodes = 750
**.numberOfCalibrationPacketsToSend = 0 #0 means infinite number of packets until calibration period ends
**.numberOfDataPacketsToSend = 3 #0 means infinite number of packets until simulation period ends
**.numberOfForwardedPacketsToSend = ${numberOfForwardedPacketsToSend = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
**.packetForwarding = 2
**.numberOfHops = 1
**.requestACKfromApp = true
**.requestADRfromApp = true
**.stopOnACK = true
**.stopOnADR = true
**.increaseSF = true
**.packetsPerSF = 2

# Nodes settings
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
#**.loRaNodes[*].**initialLoRaSF = ${initialLoRaSF = 7, 8, 9, 10, 11, 12, intuniform(7,8), intuniform(7,9), intuniform(7,10), intuniform(7,11), intuniform(7,12), intuniform(8,9), intuniform(8,10), intuniform(8,11), intuniform(8,12), intuniform(9,10), intuniform(9,11), intuniform(9,12), intuniform(10,11), intuniform(10,12), intuniform(11,12) } #21
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# Timing
**.calibrationPeriod = 24h
**.timeToFirstCalibrationPacket = uniform(0s, 3600s)
**.timeToNextCalibrationPacket = uniform(0s, 3600s)
**.timeToFirstDataPacket = uniform(0s, 120s)
**.timeToNextDataPacket = uniform(0s, 300s)
sim-time-limit = 26h
warmup-period = 1h

# Deployment
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

# Energy
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

# General constraints
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

# Other settings
LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false
**.alohaChannelModel = false
**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false


[Config UCAmI75-NumberPacketsForward-ACK-STOP-FWD2-ADR-SameSF]
# Experiment repetitions
repeat = 10

# Gateways
**.numberOfGateways = 75
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

# App
**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = true
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

# Nodes
**.numberOfNodes = 7500
**.numberOfCalibrationPacketsToSend = 0 #0 means infinite number of packets until calibration period ends
**.numberOfDataPacketsToSend = 3 #0 means infinite number of packets until simulation period ends
**.numberOfForwardedPacketsToSend = ${numberOfForwardedPacketsToSend = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
**.packetForwarding = 2
**.numberOfHops = 1
**.requestACKfromApp = true
**.requestADRfromApp = true
**.stopOnACK = true
**.stopOnADR = true
**.increaseSF = true
**.packetsPerSF = 2

# Nodes settings
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
#**.loRaNodes[*].**initialLoRaSF = ${initialLoRaSF = 7, 8, 9, 10, 11, 12, intuniform(7,8), intuniform(7,9), intuniform(7,10), intuniform(7,11), intuniform(7,12), intuniform(8,9), intuniform(8,10), intuniform(8,11), intuniform(8,12), intuniform(9,10), intuniform(9,11), intuniform(9,12), intuniform(10,11), intuniform(10,12), intuniform(11,12) } #21
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# Timing
**.calibrationPeriod = 24h
**.timeToFirstCalibrationPacket = uniform(0s, 3600s)
**.timeToNextCalibrationPacket = uniform(0s, 3600s)
**.timeToFirstDataPacket = uniform(0s, 120s)
**.timeToNextDataPacket = uniform(0s, 300s)
sim-time-limit = 26h
warmup-period = 1h

# Deployment
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

# Energy
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

# General constraints
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

# Other settings
LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false
**.alohaChannelModel = false
**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false




[Config UCAmI2019-NumberPacketsForward-ACK-FWD2-ADR-SameSF-test]
# Experiment repetitions
repeat = 10

# Gateways
**.numberOfGateways = 10
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

# App
**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = true
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

# Nodes
**.numberOfNodes = 750
**.numberOfCalibrationPacketsToSend = 0 #0 means infinite number of packets until calibration period ends
**.numberOfDataPacketsToSend = 3 #0 means infinite number of packets until simulation period ends
**.numberOfForwardedPacketsToSend = ${numberOfForwardedPacketsToSend = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
**.packetForwarding = 2
**.numberOfHops = 1
**.requestACKfromApp = true
**.requestADRfromApp = true
**.stopOnACK = false
**.stopOnADR = true
**.increaseSF = true
**.packetsPerSF = 2

# Nodes settings
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
#**.loRaNodes[*].**initialLoRaSF = ${initialLoRaSF = 7, 8, 9, 10, 11, 12, intuniform(7,8), intuniform(7,9), intuniform(7,10), intuniform(7,11), intuniform(7,12), intuniform(8,9), intuniform(8,10), intuniform(8,11), intuniform(8,12), intuniform(9,10), intuniform(9,11), intuniform(9,12), intuniform(10,11), intuniform(10,12), intuniform(11,12) } #21
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# Timing
**.calibrationPeriod = 24h
**.timeToFirstCalibrationPacket = uniform(0s, 3600s)
**.timeToNextCalibrationPacket = uniform(0s, 3600s)
**.timeToFirstDataPacket = uniform(0s, 120s)
**.timeToNextDataPacket = uniform(0s, 300s)
sim-time-limit = 26h
warmup-period = 1h

# Deployment
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

# Energy
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

# General constraints
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

# Other settings
LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false
**.alohaChannelModel = false
**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false


[Config UCAmI2019-NumberPacketsForward-ACK-FWD2-ADR-SameSF]
# Experiment repetitions
repeat = 10

# Gateways
**.numberOfGateways = 10
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

# App
**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = true
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

# Nodes
**.numberOfNodes = 7500
**.numberOfCalibrationPacketsToSend = 0 #0 means infinite number of packets until calibration period ends
**.numberOfDataPacketsToSend = 3 #0 means infinite number of packets until simulation period ends
**.numberOfForwardedPacketsToSend = ${numberOfForwardedPacketsToSend = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
**.packetForwarding = 2
**.numberOfHops = 1
**.requestACKfromApp = true
**.requestADRfromApp = true
**.stopOnACK = false
**.stopOnADR = true
**.increaseSF = true
**.packetsPerSF = 2

# Nodes settings
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
#**.loRaNodes[*].**initialLoRaSF = ${initialLoRaSF = 7, 8, 9, 10, 11, 12, intuniform(7,8), intuniform(7,9), intuniform(7,10), intuniform(7,11), intuniform(7,12), intuniform(8,9), intuniform(8,10), intuniform(8,11), intuniform(8,12), intuniform(9,10), intuniform(9,11), intuniform(9,12), intuniform(10,11), intuniform(10,12), intuniform(11,12) } #21
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# Timing
**.calibrationPeriod = 24h
**.timeToFirstCalibrationPacket = uniform(0s, 3600s)
**.timeToNextCalibrationPacket = uniform(0s, 3600s)
**.timeToFirstDataPacket = uniform(0s, 120s)
**.timeToNextDataPacket = uniform(0s, 300s)
sim-time-limit = 26h
warmup-period = 1h

# Deployment
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

# Energy
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

# General constraints
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

# Other settings
LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false
**.alohaChannelModel = false
**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false



[Config UCAmI2019-NumberPacketsForward-ACK-STOP-FWD2-ADR-SameSF-test]
# Experiment repetitions
repeat = 10

# Gateways
**.numberOfGateways = 10
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

# App
**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = true
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

# Nodes
**.numberOfNodes = 750
**.numberOfCalibrationPacketsToSend = 0 #0 means infinite number of packets until calibration period ends
**.numberOfDataPacketsToSend = 3 #0 means infinite number of packets until simulation period ends
**.numberOfForwardedPacketsToSend = ${numberOfForwardedPacketsToSend = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
**.packetForwarding = 2
**.numberOfHops = 1
**.requestACKfromApp = true
**.requestADRfromApp = true
**.stopOnACK = true
**.stopOnADR = true
**.increaseSF = true
**.packetsPerSF = 2

# Nodes settings
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
#**.loRaNodes[*].**initialLoRaSF = ${initialLoRaSF = 7, 8, 9, 10, 11, 12, intuniform(7,8), intuniform(7,9), intuniform(7,10), intuniform(7,11), intuniform(7,12), intuniform(8,9), intuniform(8,10), intuniform(8,11), intuniform(8,12), intuniform(9,10), intuniform(9,11), intuniform(9,12), intuniform(10,11), intuniform(10,12), intuniform(11,12) } #21
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# Timing
**.calibrationPeriod = 24h
**.timeToFirstCalibrationPacket = uniform(0s, 3600s)
**.timeToNextCalibrationPacket = uniform(0s, 3600s)
**.timeToFirstDataPacket = uniform(0s, 120s)
**.timeToNextDataPacket = uniform(0s, 300s)
sim-time-limit = 26h
warmup-period = 1h

# Deployment
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

# Energy
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

# General constraints
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

# Other settings
LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false
**.alohaChannelModel = false
**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false


[Config UCAmI2019-NumberPacketsForward-ACK-STOP-FWD2-ADR-SameSF]
# Experiment repetitions
repeat = 10

# Gateways
**.numberOfGateways = 10
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

# App
**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = true
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

# Nodes
**.numberOfNodes = 7500
**.numberOfCalibrationPacketsToSend = 0 #0 means infinite number of packets until calibration period ends
**.numberOfDataPacketsToSend = 3 #0 means infinite number of packets until simulation period ends
**.numberOfForwardedPacketsToSend = ${numberOfForwardedPacketsToSend = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
**.packetForwarding = 2
**.numberOfHops = 1
**.requestACKfromApp = true
**.requestADRfromApp = true
**.stopOnACK = true
**.stopOnADR = true
**.increaseSF = true
**.packetsPerSF = 2

# Nodes settings
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
#**.loRaNodes[*].**initialLoRaSF = ${initialLoRaSF = 7, 8, 9, 10, 11, 12, intuniform(7,8), intuniform(7,9), intuniform(7,10), intuniform(7,11), intuniform(7,12), intuniform(8,9), intuniform(8,10), intuniform(8,11), intuniform(8,12), intuniform(9,10), intuniform(9,11), intuniform(9,12), intuniform(10,11), intuniform(10,12), intuniform(11,12) } #21
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 10dBm + 3dBm*intuniform(0, 4)

# Timing
**.calibrationPeriod = 24h
**.timeToFirstCalibrationPacket = uniform(0s, 3600s)
**.timeToNextCalibrationPacket = uniform(0s, 3600s)
**.timeToFirstDataPacket = uniform(0s, 120s)
**.timeToNextDataPacket = uniform(0s, 300s)
sim-time-limit = 26h
warmup-period = 1h

# Deployment
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

# Energy
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

# General constraints
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

# Other settings
LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false
**.alohaChannelModel = false
**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false

