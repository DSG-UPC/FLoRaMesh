[General]
network = LoRaNetworkTest
rng-class = "cMersenneTwister"

# network features
#**.numberOfGateways = ${numberOfGateways= 1, 2, 3, 4, 5, 6, 8, 10, 12, 16, 20, 24, 32, 40, 48, 64, 80, 100, 500, 1000} #20
#**.numberOfGateways = ${numberOfGateways= 1, 2, 3, 4, 6, 8, 12, 16, 24, 32, 48, 64, 100, 500, 1000} #15
**.numberOfGateways = 10
**.loRaGW[0].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"
**.loRaGW[0].packetForwarder.indexNumber = 0
**.loRaGW[1].packetForwarder.indexNumber = 1
**.loRaGW[2].packetForwarder.indexNumber = 2
**.loRaGW[3].packetForwarder.indexNumber = 3
**.loRaGW[4].packetForwarder.indexNumber = 4
**.loRaGW[5].packetForwarder.indexNumber = 5
**.loRaGW[6].packetForwarder.indexNumber = 6
**.loRaGW[7].packetForwarder.indexNumber = 7
**.loRaGW[8].packetForwarder.indexNumber = 8
**.loRaGW[9].packetForwarder.indexNumber = 9

**.loRaGW[1].numUdpApps = 1
**.loRaGW[1].packetForwarder.localPort = 2000
**.loRaGW[1].packetForwarder.destPort = 1000
**.loRaGW[1].packetForwarder.destAddresses = "networkServer"
**.loRaGW[1].packetForwarder.indexNumber = 1

**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = false
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destAddresses = "loRaGW[0]"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = ${"avg"}

**.numberOfNodes = 7500
**.numberOfPacketsToSend = 3 #0 means infinite number of packets
sim-time-limit = 2h
warmup-period = 1h
simtime-resolution = -11

**.timeToFirstPacket = 3600s+uniform(0s, 120s)
**.timeToNextPacket = uniform(0s, 300s)
**.alohaChannelModel = false

#nodes features
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = (10dBm + 3dBm*intuniform(0, 4))

# deployment of nodes in a circle with radius=maxGatewayDistance and gateway at gatewayX,gatewayY
#**.loRaNodes[*].deploymentType = "circle"
#**.loRaNodes[*].maxGatewayDistance = 120.0
#**.loRaNodes[*].gatewayX = 240
#**.loRaNodes[*].gatewayY = 240

# random deployment of nodes in a square square area
**.loRaNodes[*].**.initialX = uniform(0m, 1400m)
**.loRaNodes[*].**.initialY = uniform(0m, 2500m)

#gateway features
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1400m)
**.loRaGW[*].**.initialY = uniform(0m, 2500m)

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1400m
**.constraintAreaMaxY = 2500m
**.constraintAreaMaxZ = 0m

LoRaNetworkTest.**.radio.separateTransmissionParts = false
LoRaNetworkTest.**.radio.separateReceptionParts = false

**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false
