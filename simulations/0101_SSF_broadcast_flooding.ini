[General]
# network
	network = LoRaMesh
# logging
	#cmdenv-status-frequency = 10000000s
	#cmdenv-output-file = cmd_env_log.txt
	cmdenv-autoflush = true
	cmdenv-express-mode = true
**.vector-recording = false
# random numbers generator
	rng-class = "cMersenneTwister"
	seed-set = ${repetition}
# simulation timing
	simtime-resolution = -11
	sim-time-limit = 2h
	warmup-period = 1h
# random deployment of nodes in a rectangular area
	**.loRaNodes[*].**.initialX = uniform(0m, 250m)
	**.loRaNodes[*].**.initialY = uniform(0m, 250m)
# power consumption features
	**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
	**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
	**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")
#general network features
	**.constraintAreaMinX = 0m
	**.constraintAreaMinY = 0m
	**.constraintAreaMinZ = 0m
	**.constraintAreaMaxX = 10000m
	**.constraintAreaMaxY = 10000m
	**.constraintAreaMaxZ = 0m
	**.delayer.config = xmldoc("cloudDelays.xml")
	**.radio.radioMediumModule = "LoRaMedium"
	**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
	**.sigma = 0
	**.minInterferenceTime = 0s


[Config LoRaMesh_0100_SSF_broadcast_flooding]# network features
# network features
**.numberOfGateways = 0

# number of nodes
**.numberOfNodes = ${numberOfNodes = 4, 16, 25, 36, 49, 64}

# data packets generation
**.sendPacketsContinuously = false
**.numberOfDestinationsPerNode = 0 #it should be smaller than numberOfNodes, or 0 to send to all nodes
**.numberOfPacketsPerDestination = 100
**.dataPacketDefaultSize = 20B
**.packetTTL = 0 #if 0, LoraNodeApp.cc calculates value
**.timeToFirstDataPacket = 3600s+uniform(0s, 10s)
**.timeToNextDataPacket = exponential(1s)

# forwarded packets
**.numberOfPacketsToForward = 0 #0 for no limit 
**.ownDataPriority = 0.1 #0: forward priority; 1: own data priority

# routing settings
**.routingMetric = 0 #see LoRaNodeApp.cc for the values
**.routeTimeout = 60s
**.storeBestRouteOnly = false
**.getRoutesFromDataPackets = true
**.routingPacketPriority = 0.5
**.routingPacketMaxSize = 12B
**.timeToFirstRoutingPacket = 1800s+uniform(0s, 120s)
**.timeToNextRoutingPacket = exponential(30s)

# duty cycle
**.dutyCycle = 0.01
**.enforceDutyCycle = ${enforceDutyCycle = true, false}

# LoRa settings
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**initialLoRaSF = 7
**.loRaNodes[*].**minLoRaSF = 7
**.loRaNodes[*].**maxLoRaSF = 12
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 1
**.loRaNodes[*].**initialLoRaTP = 20dBm
**.loRaNodes[*].**initialLoRaCAD = true
**.loRaNodes[*].**initialLoRaCADatt = 0dB

# nodes placement
**.loRaNodes[*].deploymentType = "grid"
**.loRaNodes[*].minX = 0m
**.loRaNodes[*].sepX = 250m
**.loRaNodes[*].minY = 0m
**.loRaNodes[*].sepY = 250m

################################################################################
################################################################################
################################################################################

[Config LoRaMesh_0101_SSF_broadcast_smart]# network features
**.numberOfGateways = 0
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = false
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

**.numberOfNodes = ${numberOfNodes = 4, 16, 25, 36, 49, 64}

**.sendPacketsContinuously = false
**.enforceDutyCycle = ${enforceDutyCycle = true, false}
**.dutyCycle = 0.01
**.numberOfDestinationsPerNode = 0 #it should be smaller than numberOfNodes, or 0 (==all of them)
**.numberOfPacketsPerDestination = 10
**.dataPacketDefaultSize = 20B

**.numberOfPacketsToForward = 0 #0 for no limit 
**.ownDataPriority = 0.1

**.routingMetric = 1
**.routeDiscovery = true
**.packetTTL = 14
**.routingPacketPriority = 0.5
**.routeTimeout = 60s
**.storeBestRouteOnly = false
**.getRoutesFromDataPackets = true
**.routingPacketMaxSize = 12B

**.requestACKfromDestination = false
**.stopOnACK = false
**.increaseSF = false

sim-time-limit = 49h
warmup-period = 1h

**.timeToFirstDataPacket = 3600s+uniform(0s, 10s)
**.timeToNextDataPacket = 1s
**.timeToFirstRoutingPacket = 1800s+uniform(0s, 120s)
**.timeToNextRoutingPacket = uniform(30s, 30s)
**.alohaChannelModel = false

#nodes features
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,7)
**.loRaNodes[*].**minLoRaSF = 7
**.loRaNodes[*].**maxLoRaSF = 7
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 20dBm
**.loRaNodes[*].**initialLoRaCAD = true
**.loRaNodes[*].**initialLoRaCADatt = 0dB

# deployment of nodes in a circle with radius=maxGatewayDistance and gateway at gatewayX,gatewayY
**.loRaNodes[*].deploymentType = "grid"
**.loRaNodes[*].minX = 0m
**.loRaNodes[*].sepX = 250m
**.loRaNodes[*].minY = 0m
**.loRaNodes[*].sepY = 250m
**.loRaNodes[*].cols = 3
#**.loRaNodes[*].maxGatewayDistance = 120.0
#**.loRaNodes[*].gatewayX = 240
#**.loRaNodes[*].gatewayY = 240

# random deployment of nodes in a rectangular area
**.loRaNodes[*].**.initialX = uniform(0m, 250m)
**.loRaNodes[*].**.initialY = uniform(0m, 250m)

#gateway features
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1000m)
**.loRaGW[*].**.initialY = uniform(0m, 1000m)

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 10000m
**.constraintAreaMaxY = 10000m
**.constraintAreaMaxZ = 0m

LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false

**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false




[Config LoRaMesh_0103_SSF_broadcast_smart]# network features
**.numberOfGateways = 0
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"

**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = false
**.networkServer.**.acknowledgePackets = true
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = "avg"

**.numberOfNodes = ${numberOfNodes = 4, 16, 25, 36, 49, 64}

**.sendPacketsContinuously = false
**.enforceDutyCycle = ${enforceDutyCycle = true, false}
**.dutyCycle = 0.01
**.numberOfDestinationsPerNode = 0 #it should be smaller than numberOfNodes, or 0 (==all of them)
**.numberOfPacketsPerDestination = 10
**.dataPacketDefaultSize = 20B

**.numberOfPacketsToForward = 0 #0 for no limit 
**.ownDataPriority = 0.1

**.routingMetric = 3
**.routeDiscovery = true
**.packetTTL = 14
**.routingPacketPriority = 0.5
**.routeTimeout = 60s
**.storeBestRouteOnly = false
**.getRoutesFromDataPackets = true
**.routingPacketMaxSize = 12B

**.requestACKfromDestination = false
**.stopOnACK = false
**.increaseSF = false

sim-time-limit = 49h
warmup-period = 1h

**.timeToFirstDataPacket = 3600s+uniform(0s, 10s)
**.timeToNextDataPacket = 1s
**.timeToFirstRoutingPacket = 1800s+uniform(0s, 120s)
**.timeToNextRoutingPacket = uniform(30s, 30s)
**.alohaChannelModel = false

#nodes features
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,7)
**.loRaNodes[*].**minLoRaSF = 7
**.loRaNodes[*].**maxLoRaSF = 7
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = 20dBm
**.loRaNodes[*].**initialLoRaCAD = true
**.loRaNodes[*].**initialLoRaCADatt = 0dB

# deployment of nodes in a circle with radius=maxGatewayDistance and gateway at gatewayX,gatewayY
**.loRaNodes[*].deploymentType = "grid"
**.loRaNodes[*].minX = 0m
**.loRaNodes[*].sepX = 250m
**.loRaNodes[*].minY = 0m
**.loRaNodes[*].sepY = 250m
**.loRaNodes[*].cols = 3
#**.loRaNodes[*].maxGatewayDistance = 120.0
#**.loRaNodes[*].gatewayX = 240
#**.loRaNodes[*].gatewayY = 240

# random deployment of nodes in a rectangular area
**.loRaNodes[*].**.initialX = uniform(0m, 250m)
**.loRaNodes[*].**.initialY = uniform(0m, 250m)

#gateway features
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.initialX = uniform(0m, 1000m)
**.loRaGW[*].**.initialY = uniform(0m, 1000m)

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 10000m
**.constraintAreaMaxY = 10000m
**.constraintAreaMaxZ = 0m

LoRaMotoMesh.**.radio.separateTransmissionParts = false
LoRaMotoMesh.**.radio.separateReceptionParts = false

**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false


